package pitch

var normalizedPitches = map[Pitch]Pitch{
	CN1DoubleSharp: DN1Natural,
	DN1DoubleFlat:  CN1Natural,
	DN1DoubleSharp: EN1Natural,
	EN1DoubleFlat:  DN1Natural,
	EN1Sharp:       FN1Natural,
	EN1DoubleSharp: FN1Sharp,
	FN1DoubleFlat:  EN1Flat,
	FN1Flat:        EN1Natural,
	FN1DoubleSharp: GN1Natural,
	GN1DoubleFlat:  FN1Natural,
	GN1DoubleSharp: AN1Natural,
	AN1DoubleFlat:  GN1Natural,
	AN1DoubleSharp: BN1Natural,
	BN1DoubleFlat:  AN1Natural,
	BN1Sharp:       C0Natural,
	BN1DoubleSharp: C0Sharp,

	C0DoubleFlat:  BN1Flat,
	C0Flat:        BN1Natural,
	C0DoubleSharp: D0Natural,
	D0DoubleFlat:  C0Natural,
	D0DoubleSharp: E0Natural,
	E0DoubleFlat:  D0Natural,
	E0Sharp:       F0Natural,
	E0DoubleSharp: F0Sharp,
	F0DoubleFlat:  E0Flat,
	F0Flat:        E0Natural,
	F0DoubleSharp: G0Natural,
	G0DoubleFlat:  F0Natural,
	G0DoubleSharp: A0Natural,
	A0DoubleFlat:  G0Natural,
	A0DoubleSharp: B0Natural,
	B0DoubleFlat:  A0Natural,
	B0Sharp:       C1Natural,
	B0DoubleSharp: C1Sharp,

	C1DoubleFlat:  B0Flat,
	C1Flat:        B0Natural,
	C1DoubleSharp: D1Natural,
	D1DoubleFlat:  C1Natural,
	D1DoubleSharp: E1Natural,
	E1DoubleFlat:  D1Natural,
	E1Sharp:       F1Natural,
	E1DoubleSharp: F1Sharp,
	F1DoubleFlat:  E1Flat,
	F1Flat:        E1Natural,
	F1DoubleSharp: G1Natural,
	G1DoubleFlat:  F1Natural,
	G1DoubleSharp: A1Natural,
	A1DoubleFlat:  G1Natural,
	A1DoubleSharp: B1Natural,
	B1DoubleFlat:  A1Natural,
	B1Sharp:       C2Natural,
	B1DoubleSharp: C2Sharp,

	C2DoubleFlat:  B1Flat,
	C2Flat:        B1Natural,
	C2DoubleSharp: D2Natural,
	D2DoubleFlat:  C2Natural,
	D2DoubleSharp: E2Natural,
	E2DoubleFlat:  D2Natural,
	E2Sharp:       F2Natural,
	E2DoubleSharp: F2Sharp,
	F2DoubleFlat:  E2Flat,
	F2Flat:        E2Natural,
	F2DoubleSharp: G2Natural,
	G2DoubleFlat:  F2Natural,
	G2DoubleSharp: A2Natural,
	A2DoubleFlat:  G2Natural,
	A2DoubleSharp: B2Natural,
	B2DoubleFlat:  A2Natural,
	B2Sharp:       C3Natural,
	B2DoubleSharp: C3Sharp,

	C3DoubleFlat:  B2Flat,
	C3Flat:        B2Natural,
	C3DoubleSharp: D3Natural,
	D3DoubleFlat:  C3Natural,
	D3DoubleSharp: E3Natural,
	E3DoubleFlat:  D3Natural,
	E3Sharp:       F3Natural,
	E3DoubleSharp: F3Sharp,
	F3DoubleFlat:  E3Flat,
	F3Flat:        E3Natural,
	F3DoubleSharp: G3Natural,
	G3DoubleFlat:  F3Natural,
	G3DoubleSharp: A3Natural,
	A3DoubleFlat:  G3Natural,
	A3DoubleSharp: B3Natural,
	B3DoubleFlat:  A3Natural,
	B3Sharp:       C4Natural,
	B3DoubleSharp: C4Sharp,

	C4DoubleFlat:  B3Flat,
	C4Flat:        B3Natural,
	C4DoubleSharp: D4Natural,
	D4DoubleFlat:  C4Natural,
	D4DoubleSharp: E4Natural,
	E4DoubleFlat:  D4Natural,
	E4Sharp:       F4Natural,
	E4DoubleSharp: F4Sharp,
	F4DoubleFlat:  E4Flat,
	F4Flat:        E4Natural,
	F4DoubleSharp: G4Natural,
	G4DoubleFlat:  F4Natural,
	G4DoubleSharp: A4Natural,
	A4DoubleFlat:  G4Natural,
	A4DoubleSharp: B4Natural,
	B4DoubleFlat:  A4Natural,
	B4Sharp:       C5Natural,
	B4DoubleSharp: C5Sharp,

	C5DoubleFlat:  B4Flat,
	C5Flat:        B4Natural,
	C5DoubleSharp: D5Natural,
	D5DoubleFlat:  C5Natural,
	D5DoubleSharp: E5Natural,
	E5DoubleFlat:  D5Natural,
	E5Sharp:       F5Natural,
	E5DoubleSharp: F5Sharp,
	F5DoubleFlat:  E5Flat,
	F5Flat:        E5Natural,
	F5DoubleSharp: G5Natural,
	G5DoubleFlat:  F5Natural,
	G5DoubleSharp: A5Natural,
	A5DoubleFlat:  G5Natural,
	A5DoubleSharp: B5Natural,
	B5DoubleFlat:  A5Natural,
	B5Sharp:       C6Natural,
	B5DoubleSharp: C6Sharp,

	C6DoubleFlat:  B5Flat,
	C6Flat:        B5Natural,
	C6DoubleSharp: D6Natural,
	D6DoubleFlat:  C6Natural,
	D6DoubleSharp: E6Natural,
	E6DoubleFlat:  D6Natural,
	E6Sharp:       F6Natural,
	E6DoubleSharp: F6Sharp,
	F6DoubleFlat:  E6Flat,
	F6Flat:        E6Natural,
	F6DoubleSharp: G6Natural,
	G6DoubleFlat:  F6Natural,
	G6DoubleSharp: A6Natural,
	A6DoubleFlat:  G6Natural,
	A6DoubleSharp: B6Natural,
	B6DoubleFlat:  A6Natural,
	B6Sharp:       C7Natural,
	B6DoubleSharp: C7Sharp,

	C7DoubleFlat:  B6Flat,
	C7Flat:        B6Natural,
	C7DoubleSharp: D7Natural,
	D7DoubleFlat:  C7Natural,
	D7DoubleSharp: E7Natural,
	E7DoubleFlat:  D7Natural,
	E7Sharp:       F7Natural,
	E7DoubleSharp: F7Sharp,
	F7DoubleFlat:  E7Flat,
	F7Flat:        E7Natural,
	F7DoubleSharp: G7Natural,
	G7DoubleFlat:  F7Natural,
	G7DoubleSharp: A7Natural,
	A7DoubleFlat:  G7Natural,
	A7DoubleSharp: B7Natural,
	B7DoubleFlat:  A7Natural,
	B7Sharp:       C8Natural,
	B7DoubleSharp: C8Sharp,

	C8DoubleFlat:  B7Flat,
	C8Flat:        B7Natural,
	C8DoubleSharp: D8Natural,
	D8DoubleFlat:  C8Natural,
	D8DoubleSharp: E8Natural,
	E8DoubleFlat:  D8Natural,
	E8Sharp:       F8Natural,
	E8DoubleSharp: F8Sharp,
	F8DoubleFlat:  E8Flat,
	F8Flat:        E8Natural,
	F8DoubleSharp: G8Natural,
	G8DoubleFlat:  F8Natural,
	G8DoubleSharp: A8Natural,
	A8DoubleFlat:  G8Natural,
	A8DoubleSharp: B8Natural,
	B8DoubleFlat:  A8Natural,
	B8Sharp:       C9Natural,
	B8DoubleSharp: C9Sharp,

	C9DoubleFlat:  B8Flat,
	C9Flat:        B8Natural,
	C9DoubleSharp: D9Natural,
	D9DoubleFlat:  C9Natural,
	D9DoubleSharp: E9Natural,
	E9DoubleFlat:  D9Natural,
	E9Sharp:       F9Natural,
	E9DoubleSharp: F9Sharp,
	F9DoubleFlat:  E9Flat,
	F9Flat:        E9Natural,
	F9DoubleSharp: G9Natural,
	G9DoubleFlat:  F9Natural,
	G9DoubleSharp: A9Natural,
	A9DoubleFlat:  G9Natural,
	A9DoubleSharp: B9Natural,
	B9DoubleFlat:  A9Natural,
	B9Sharp:       C10Natural,
	B9DoubleSharp: C10Sharp,

	C10DoubleFlat:  B9Flat,
	C10Flat:        B9Natural,
	C10DoubleSharp: D10Natural,
	D10DoubleFlat:  C10Natural,
	D10DoubleSharp: E10Natural,
	E10DoubleFlat:  D10Natural,
	E10Sharp:       F10Natural,
	E10DoubleSharp: F10Sharp,
	F10DoubleFlat:  E10Flat,
	F10Flat:        E10Natural,
	F10DoubleSharp: G10Natural,
	G10DoubleFlat:  F10Natural,
	G10DoubleSharp: A10Natural,
	A10DoubleFlat:  G10Natural,
	A10DoubleSharp: B10Natural,
	B10DoubleFlat:  A10Natural,
}

// Normalize normalizes given pitch
func (p Pitch) Normalize() Pitch {
	if v, found := normalizedPitches[p]; found {
		return v
	}

	return p
}
